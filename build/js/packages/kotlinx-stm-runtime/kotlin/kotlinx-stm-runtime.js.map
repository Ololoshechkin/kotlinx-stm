{"version":3,"file":"kotlinx-stm-runtime.js","sources":["../../../../../src/commonMain/kotlin/kotlinx/stm/STM.kt","util/Standard.kt","../../../../../src/jsMain/kotlin/kotlinx/stm/STMJs.kt"],"sourcesContent":[null,"/*\n * Copyright 2010-2018 JetBrains s.r.o. and Kotlin Programming Language contributors.\n * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.\n */\n\n@file:kotlin.jvm.JvmMultifileClass\n@file:kotlin.jvm.JvmName(\"StandardKt\")\npackage kotlin\n\nimport kotlin.contracts.*\n\n/**\n * An exception is thrown to indicate that a method body remains to be implemented.\n */\npublic class NotImplementedError(message: String = \"An operation is not implemented.\") : Error(message)\n\n/**\n * Always throws [NotImplementedError] stating that operation is not implemented.\n */\n\n@kotlin.internal.InlineOnly\npublic inline fun TODO(): Nothing = throw NotImplementedError()\n\n/**\n * Always throws [NotImplementedError] stating that operation is not implemented.\n *\n * @param reason a string explaining why the implementation is missing.\n */\n@kotlin.internal.InlineOnly\npublic inline fun TODO(reason: String): Nothing = throw NotImplementedError(\"An operation is not implemented: $reason\")\n\n\n\n/**\n * Calls the specified function [block] and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#run).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <R> run(block: () -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block()\n}\n\n/**\n * Calls the specified function [block] with `this` value as its receiver and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#run).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> T.run(block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block()\n}\n\n/**\n * Calls the specified function [block] with the given [receiver] as its receiver and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#with).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return receiver.block()\n}\n\n/**\n * Calls the specified function [block] with `this` value as its receiver and returns `this` value.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#apply).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T> T.apply(block: T.() -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block()\n    return this\n}\n\n/**\n * Calls the specified function [block] with `this` value as its argument and returns `this` value.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#also).\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.also(block: (T) -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block(this)\n    return this\n}\n\n/**\n * Calls the specified function [block] with `this` value as its argument and returns its result.\n *\n * For detailed usage information see the documentation for [scope functions](https://kotlinlang.org/docs/reference/scope-functions.html#let).\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> T.let(block: (T) -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return block(this)\n}\n\n/**\n * Returns `this` value if it satisfies the given [predicate] or `null`, if it doesn't.\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.takeIf(predicate: (T) -> Boolean): T? {\n    contract {\n        callsInPlace(predicate, InvocationKind.EXACTLY_ONCE)\n    }\n    return if (predicate(this)) this else null\n}\n\n/**\n * Returns `this` value if it _does not_ satisfy the given [predicate] or `null`, if it does.\n */\n@kotlin.internal.InlineOnly\n@SinceKotlin(\"1.1\")\npublic inline fun <T> T.takeUnless(predicate: (T) -> Boolean): T? {\n    contract {\n        callsInPlace(predicate, InvocationKind.EXACTLY_ONCE)\n    }\n    return if (!predicate(this)) this else null\n}\n\n/**\n * Executes the given function [action] specified number of [times].\n *\n * A zero-based index of current iteration is passed as a parameter to [action].\n *\n * @sample samples.misc.ControlFlow.repeat\n */\n@kotlin.internal.InlineOnly\npublic inline fun repeat(times: Int, action: (Int) -> Unit) {\n    contract { callsInPlace(action) }\n\n    for (index in 0 until times) {\n        action(index)\n    }\n}\n",null],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgBA,2B;IAAA,+B;G;;;;;;;EAAA,uC;IAAA,sC;MAAA,qB;KAAA,+B;G;EAE2B,+B;IAAC,oB;IAAkB,wB;G;;SAAA,Y;MAAA,yB;K;;2CAC1C,e;IAA0C,uB;G;wDAE1C,e;IAAuD,2BAAO,GAAP,C;G;yCAEvD,sB;IACI,mBAAI,K;EACR,C;sDAEA,sB;IAA4D,kBAAK,KAAL,EAAY,GAAZ,C;G;;;;;;EAGhE,e;G;4CAGI,0B;EAA2F,C;wCAU3F,0B;IAAsB,uB;MAAA,UAAuB,I;IAItB,Q;IAHnB,+BAAkB,OAAlB,EAA2B,KAA3B,C;IACA,OAAO,IAAP,C;mBACoB,kCAAqB,OAArB,EAA8B,KAA9B,C;MAAhB,IAAK,yBAAL;QAAU,wB;MACV,IAAI,EAAJ,C;QAAQ,OAAO,oE;;EAEvB,C;EAOyB,6C;IAAA,4B;MAAE,OAAA,gBAAS,6BAAoB,SAApB,C;IAA0B,C;G;iCAH9D,6B;IACI,Q;IAAA,iCCyDG,yBDxDO,yB;;KCwDP,YDxDO,QCwDP,GDzDH,OCyDG,CDzDH,0BAEO,mCAAc,2BAAd,C;G;EASc,+D;IAAA,4B;MAAE,gBAAS,2BAAkB,gBAAlB,EAA4B,SAA5B,C;MAAkC,W;IAAA,C;G;iCAPtE,uC;IACI,uB;MAAA,UAAuB,I;IAIvB,Q;IAAA,U;IAAA,oB;MACqB,6CADrB,OACqB,C;MADrB,a;;MAAA,a;IAAA,iCAEO,mCAAc,qCAAd,C;G;;;;;;EAIf,yB;G;;;;;;EAGA,0B;G;;;;;;EAOA,mC;IAAsB,mB;MAAA,MAAW,yBAAY,S;IACzC,OAAA,GAAI,uBAAc,IAAd,EAAoB,KAApB,C;G;EE9ER,uB;IAAA,2B;G;EAC0B,4C;IAAS,c;G;0DAC3B,Y;IAAyC,oC;G;4EAEzC,qC;IAGsB,gBAAqB,MAAhB,6BAAgB,CAArB,EAA8B,IAA9B,C;G;4DAEtB,qB;IAAsC,yBAAc,SAAd,EAAyB,IAAzB,C;G;;;;;iCAR1C,Y;IAAsB,6C;G;;;;;;;EAD1B,mC;IAAA,kC;MAAA,iB;KAAA,2B;G;;;;;;;;;;;;;;;;;;;"}